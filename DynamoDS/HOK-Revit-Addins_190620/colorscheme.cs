//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;
using System.Collections.Generic;
using System.Windows.Media;
using Autodesk.Revit.DB;
using HOK.SmartBCF.GoogleUtils;

// 
// This source code was auto-generated by xsd, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
[System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
public partial class ColorSchemeInfo {
    
    private List<ColorScheme> colorSchemesField = new List<ColorScheme>();

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public List<ColorScheme> ColorSchemes
    {
        get {
            return this.colorSchemesField;
        }
        set {
            this.colorSchemesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ColorScheme {
    
    private string schemeNameField="";
    
    private List<string> categoriesField = new List<string>();
    
    private string parameterNameField="";

    private DefinitionType definitionBy = DefinitionType.None;

    private List<ColorDefinition> colorDefinitionsField=new List<ColorDefinition>();

    private List<FilterRule> filterRulesField = new List<FilterRule>();

    private string schemeIdField="";

    private bool presetRange = false;

    private int numberOfRange = 3;

    private string viewName = "";

    private bool includeLinks = false;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string SchemeName {
        get {
            return this.schemeNameField;
        }
        set {
            this.schemeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute("Category", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public List<string> Categories
    {
        get {
            return this.categoriesField;
        }
        set {
            this.categoriesField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ParameterName {
        get {
            return this.parameterNameField;
        }
        set {
            this.parameterNameField = value;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
    public List<ColorDefinition> ColorDefinitions
    {
        get { return this.colorDefinitionsField; }
        set { this.colorDefinitionsField = value; }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    [System.Xml.Serialization.XmlArrayItemAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
    public List<FilterRule> FilterRules
    {
        get { return this.filterRulesField; }
        set { this.filterRulesField = value; }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SchemeId {
        get {
            return this.schemeIdField;
        }
        set {
            this.schemeIdField = value;
        }
    }

    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DefinitionType DefinitionBy
    {
        get { return definitionBy; }
        set { definitionBy = value; }
    }

    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool PresetRange
    {
        get { return presetRange; }
        set { presetRange = value; }
    }

    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int NumberOfRange
    {
        get { return numberOfRange; }
        set { numberOfRange = value; }
    }

    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ViewName
    {
        get { return viewName; }
        set { viewName = value; }
    }

    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool IncludeLinks
    {
        get { return includeLinks; }
        set { includeLinks = value; }
    }

    public ColorScheme() { }

    public ColorScheme(ColorScheme source)
    {
        this.SchemeName = source.SchemeName;
        this.Categories = source.Categories;
        this.ParameterName = source.ParameterName;
        this.ColorDefinitions = source.ColorDefinitions;
        this.FilterRules = source.FilterRules;
        this.SchemeId = source.SchemeId;
        this.DefinitionBy = source.DefinitionBy;
        this.PresetRange = source.PresetRange;
        this.NumberOfRange = source.NumberOfRange;
        this.ViewName = source.ViewName;
        this.IncludeLinks = source.IncludeLinks;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ColorDefinition 
{
    private string parameterValueField="";

    private double minimumValue = double.MinValue;

    private double maximumValue = double.MaxValue;
    
    private byte[] colorField=new byte[3];
    
    private bool userDefinedField=false;

    private Brush backgroundColor = new SolidColorBrush(Colors.White);

    private Dictionary<string, CellAddress> cellEntries = new Dictionary<string, CellAddress>();

    public ColorDefinition() {}

    public ColorDefinition(ColorDefinition definition)
    {
        this.ParameterValue = definition.ParameterValue;
        this.MinimumValue = definition.MinimumValue;
        this.MaximumValue = definition.MaximumValue;
        this.Color = definition.Color;
        this.UserDefined = definition.UserDefined;
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string ParameterValue {
        get {
            return this.parameterValueField;
        }
        set {
            this.parameterValueField = value;
        }
    }

    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public double MinimumValue
    {
        get { return this.minimumValue; }
        set { this.minimumValue = value; }
    }

    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public double MaximumValue
    {
        get { return this.maximumValue; }
        set { this.maximumValue = value; }
    }
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="hexBinary")]
    public byte[] Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }

    [System.Xml.Serialization.XmlIgnore]
    public Brush BackgroundColor
    {
        get { return backgroundColor; }
        set { backgroundColor = value; }
    }

    [System.Xml.Serialization.XmlIgnore]
    public Dictionary<string, CellAddress> CellEntries
    {
        get { return cellEntries; }
        set { cellEntries = value; }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool UserDefined {
        get {
            return this.userDefinedField;
        }
        set {
            this.userDefinedField = value;
        }
    }
}

[System.SerializableAttribute()]
public enum DefinitionType
{
    ByValue,
    ByRange,
    None
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FilterRule {
    
    private int parameterId=0;
    
    private CriteriaName criteriaNameField = CriteriaName.na;
    
    private string ruleValueField="";

    private ParameterStorageType parameterStorageType = ParameterStorageType.None;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int ParameterId {
        get { return parameterId; }
        set { parameterId = value; }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public CriteriaName CriteriaName {
        get {
            return this.criteriaNameField;
        }
        set {
            this.criteriaNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string RuleValue {
        get {
            return this.ruleValueField;
        }
        set {
            this.ruleValueField = value;
        }
    }

    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public ParameterStorageType ParameterStorageType
    {
        get { return parameterStorageType; }
        set { parameterStorageType = value; }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.1")]
[System.SerializableAttribute()]
public enum CriteriaName {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("begins with")]
    beginswith,
    
    /// <remarks/>
    contains,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ends with")]
    endswith,
    
    /// <remarks/>
    equals,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("is greater than")]
    isgreaterthan,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("is greater than or equal to")]
    isgreaterthanorequalto,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("is less than")]
    islessthan,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("is less than or equal to")]
    islessthanorequalto,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("does not begin with")]
    doesnotbeginwith,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("does not contain")]
    doesnotcontain,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("does not end with")]
    doesnotendwith,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("does not equal")]
    doesnotequal,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("n/a")]
    na,
}

[System.SerializableAttribute()]
public enum ParameterStorageType
{
    Double,
    Integer,
    String,
    ElementId,
    None
}

